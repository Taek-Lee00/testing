[tool.poetry]
name = "hello-world"
version = "0.1.0"
description = ""
authors = ["Taek-Lee00 <dlrlxor548@gmai.com>"]
readme = "README.md"
packages = [{include = "hello_world"}]
repository= "https://github.com/Taek-Lee00/testing"

#main dependency group
[tool.poetry.dependencies]
python = ">=3.10, <3.12"

#webframework
fastapi = "^0.92.0"
uvicorn = {extras = ["standard"], version = "^0.20.0"}
python-dotenv = {version = "^1.0.0", python = "3.10"}
sqlalchemy = {extras = ["mypy"], version = "^2.0.6"}
sqlalchemy-utils = "^0.40.0"
psycopg2-binary = "^2.9.5"
psycopg2 = "^2.9.5"



[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
flake8 = "^6.0.0"
black = "^23.1.0"
isort = "^5.12.0"
pytest-mock = "^3.10.0"
httpx = "^0.23.3"
requests = "^2.28.2"
coverage = "^7.2.1"
mypy = "^1.1.1"
genbadge = {extras = ["all"], version = "^1.1.0"}
pytest-html = "^3.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
exclue = '''
/(
    \.git
| \.mypy_cache
| \.venv
| __pycache__\
| \__pycache__
| __init__.py
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
include_trailing_comma = true
extend_skip = ["migrations", ".gitignore", ".git", ".venv", "__pychache__"]

[tool.coverage.run]
#disable_warnings = ['no-data-collected']
#source = ["chart_service"]
omit = [
    "*/tests/*",
    "*/__main__.py",
    "__pycache__",
    "public/",
]

[tool.coverage.xml]
output = "docs/coverage/coverage.xml"

[tool.coverage.html]
directory = "docs/coverage"

[tool.mypy]
check_untyped_defs = true
warn_redundant_casts = true
warn_unreachable = true
warn_return_any = true
warn_unused_configs = true
exclude = [
    ".venv",
    "venv",
    "alembic",
    "__pycache__",
    ".git",
    ".github",
    "public/",
    ".pytest_cache",
    "tests",
    "conftest.py",
    ".env",
    "database"
]
